{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","Component","render","className","WelcomeMessage","Calculator","React","constructor","props","super","this","state","input","handleClick","bind","symbol","setState","answer","eval","Math","round","error","startsWith","substring","InputBar","id","style","width","paddingLeft","borderTopLeftRadius","onClick","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.da2b4423.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n// This app renders a basic calculator.\nclass App extends Component {\n   render () {\n    return (\n      <div className=\"App\">\n      <WelcomeMessage />\n      <Calculator />\n      </div>\n    );\n  }\n}\n\n// This class renders a welcome message to the user.\nclass WelcomeMessage extends Component {\n  render() {\n    return (\n      <div className=\"welcomeMessage\">\n      <h1>Welcome to React Calculator!</h1>\n      <p>This is a simple calculator built with HTML, CSS, Javascript, and React.js.</p>\n      </div>\n    );\n  }\n}\n\n\n// This class renders the buttons for the calculator and contains all of the methods and functionality.\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input : ''\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // Handles button clicking by the user.\n  handleClick(symbol) {\n    if (symbol === 'clear') {\n      this.setState({input : ''});\n    } else if (symbol === '=') {\n      try {\n        // eslint-disable-next-line\n        let answer = eval(this.state.input);  // unsafe code to use in the real world. The comment\n                                              // above this line causes a warning message about\n                                              // the eval function to be ignored.\n        answer = Math.round(answer * 1000.0) / 1000; // rounds output to three decimal places\n        this.setState({input : answer + ''});\n      } catch (error) {\n        this.setState({input : 'Invalid input'});\n      }\n    } else if (symbol === '+/-') {\n      if (this.state.input !== '') {\n          if (this.state.input.startsWith('-')) {\n            this.setState({input : this.state.input.substring(1)});\n          } else if (this.state.input !== '0'){\n            this.setState({input : '-' + this.state.input});\n          }\n      }\n    } else if (symbol === '*' || symbol === '/' || symbol === '+' || symbol === '-') {\n      this.setState({input : this.state.input + ' ' + symbol + ' '});\n    } else if (this.state.input === 'Invalid input' || this.state.input === '0') {\n      this.setState({input : symbol});\n    } else {\n      this.setState({input : this.state.input + symbol});\n    }\n  }\n\n  // Renders the buttons inside of different div elements.\n  render() {\n    return (\n      <div className=\"buttons\">\n      <InputBar input={this.state.input}/>\n      <div className=\"row1\">\n      <button id=\"clear\" style={{width : 120, paddingLeft : 89, borderTopLeftRadius: 4}} onClick={() => this.handleClick('clear')}>AC</button>\n      <button id=\"add\" style = {{borderTopRightRadius: 4}} onClick={() => this.handleClick('+')}>+</button>\n      </div>\n\n      <div className=\"row2\">\n      <button id=\"one\" onClick={() => this.handleClick('1')}>1</button>\n      <button id=\"two\" onClick={() => this.handleClick('2')}>2</button>\n      <button id=\"three\" onClick={() => this.handleClick('3')}>3</button>\n      <button id=\"subtract\" onClick={() => this.handleClick('-')}>-</button>\n      </div>\n\n      <div className=\"row3\">\n      <button id=\"four\" onClick={() => this.handleClick('4')}>4</button>\n      <button id=\"five\" onClick={() => this.handleClick('5')}>5</button>\n      <button id=\"six\" onClick={() => this.handleClick('6')}>6</button>\n      <button id=\"multiply\" onClick={() => this.handleClick('*')}>*</button>\n      </div>\n\n      <div className=\"row4\">\n      <button id=\"seven\" onClick={() => this.handleClick('7')}>7</button>\n      <button id=\"eight\" onClick={() => this.handleClick('8')}>8</button>\n      <button id=\"nine\" onClick={() => this.handleClick('9')}>9</button>\n      <button id=\"divide\" onClick={() => this.handleClick('/')}>/</button>\n      </div>\n\n      <div className=\"row5\">\n      <button id=\"negate\" style = {{borderBottomLeftRadius: 4}} onClick={() => this.handleClick('+/-')}>+/-</button>\n      <button id=\"zero\" onClick={() => this.handleClick('0')}>0</button>\n      <button id=\"decimal\" onClick={() => this.handleClick('.')}>.</button>\n      <button id=\"equals\" style = {{borderBottomRightRadius: 4}} onClick={() => this.handleClick('=')}>=</button>\n      </div>\n\n      </div>\n    );\n  }\n}\n\n// This class renders the calculator's input bar\nclass InputBar extends Component {\n\n  render() {\n    return (\n    <div className= \"inputBar\">\n    <div id=\"display\">{this.props.input}</div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}